stages:
  build:
    - build
  tag:
    - cleanup
    - tag
  predeploy:
    - namespace
    - cloudflare-credentials
    - cloudflare-issuer
  dev:
    - dry-run
    - deploy

variables:
  VERSION: v0.0.1
  TARGET: dev
  BUILD: "false"
  DEPLOY: "true"
  GIT_PROVIDER: github
  GIT_CREDENTIAL: github
  REGISTRY_CREDENTIAL: harbor-global
  NAMESPACE: test
  HELM_NAME: myapp
  HELM_CHART: helm/
  PROJECT_NAME: docs
  SERVICE_NAME: flask
  REPOSITORY_NAME: docs-flask

predeploy:
  target:
    match:
      name: $TARGET
  namespace:
    script:
      commands:
      - if [[ ! $(kubectl get ns $NAMESPACE) ]]; then
          kubectl create ns $NAMESPACE;
        fi
  cloudflare-credentials:
    secrets:
      - ORIGIN_KEY
      - REGISTRY_PASSWORD
    script:
      commands:
        - if [[ ! $(kubectl get secret service-key -n $NAMESPACE) ]]; then
            kubectl -n $NAMESPACE create secret generic service-key --from-literal key=${ORIGIN_KEY};
          fi
  cloudflare-issuer:
    secrets:
      - ORIGIN_KEY
      - REGISTRY_PASSWORD
    script:
      commands:
        - if [[ ! $(kubectl get secret ankra-regcred -n $NAMESPACE) ]]; then kubectl -n $NAMESPACE create secret docker-registry ankra-regcred --docker-server=registry.infra.ankra.cloud --docker-username='robot$global' --docker-password=$REGISTRY_PASSWORD --docker-email=admin@ankra.io; fi
        - kubectl -n $NAMESPACE apply -f https://artifact.infra.ankra.cloud/repository/ankra-install-public/manifests/origin-issuer.yaml

build:
  conditions:
    - when: "$DEPLOY"
  target:
    match:
      name: $TARGET
  build:
    docker:
      actions:
        - action: build
          name: $PROJECT_NAME/$SERVICE_NAME
          tag: $VERSION
    helm:
      actions:
        - action: package
          path: $WORKSPACE/helm
          push: true
  
tag:
  conditions:
    - when: "$DEPLOY"
  target:
    match:
      name: $TARGET
  cleanup:
    allow_failure: true
    git:
      provider: $GIT_PROVIDER
      credential: $GIT_CREDENTIAL
      tags: $VERSION
      actions:
        - action: delete_tag
        - action: push_tag
  tag:
    git:
      provider: $GIT_PROVIDER
      credential: $GIT_CREDENTIAL
      tags: $VERSION
      actions:
        - action: tag
          message: "RSP $VERSION"
        - action: push_tag
dev:
  conditions:
    - when: "$DEPLOY"
  target:
    match:
      name: $TARGET
  dry-run:
    helm:
      actions:
        - action: add_repository
          name: common
          url: https://charts.bitnami.com/bitnami
        - action: upgrade
          name: $HELM_NAME
          namespace: $NAMESPACE
          chart: $WORKSPACE/helm
          extra_args:
            - --set image.tag=$VERSION
            - --dry-run
  deploy:
    helm:
      actions:
        - action: add_repository
          name: common
          url: https://charts.bitnami.com/bitnami
        - action: upgrade
          name: $HELM_NAME
          namespace: $NAMESPACE
          chart: $WORKSPACE/helm
          extra_args:
            - --set image.tag=$VERSION
            - --set fullnameOverride=$HELM_NAME
            - --set global.environment=prod